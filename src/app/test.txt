# Run this for each sample problem
curl -X POST http://localhost:3000/api/problems \
-H "Content-Type: application/json" \
-d '
{
  "title": "Valid Parentheses",
  "description": "Determine if a string containing '()[]{}' is valid.",
  "difficulty": "Easy",
  "tags": ["Stack"],
  "testCases": [
    {
      "input": "()[]{}",
      "expectedOutput": "true",
      "isPublic": true
    }
  ],
  "boilerplate": "def isValid(s: str) -> bool:"
}
'

curl -X POST "http://localhost:3000/api/problems" \
     -H "Content-Type: application/json" \
     --data-raw '{
          "questionId": "12345",
          "questionFrontendId": "1001",
          "titleSlug": "two-sum",
          "title": "Two Sum",
          "content": "<p>Given an array of integers <code>nums</code> and an integer <code>target</code>, return <em>indices of the two numbers such that they add up to <code>target</code></em>.</p><p>You may assume that each input would have <strong><em>exactly</em> one solution</strong>, and you may not use the <em>same</em> element twice.</p><p>You can return the answer in any order.</p><p><strong>Example 1:</strong></p><pre><code><strong>Input:</strong> nums = [2,7,11,15], target = 9\n<strong>Output:</strong> [0,1]\n<strong>Explanation:</strong> Because nums[0] + nums[1] == 9, we return [0, 1].</code></pre><p><strong>Example 2:</strong></p><pre><code><strong>Input:</strong> nums = [3,2,4], target = 6\n<strong>Output:</strong> [1,2]</code></pre><p><strong>Example 3:</strong></p><pre><code><strong>Input:</strong> nums = [3,3], target = 6\n<strong>Output:</strong> [0,1]</code></pre><p><strong>Constraints:</strong></p><ul><li><code>2 ≤ nums.length ≤ 10<sup>4</sup></code></li><li><code>-10<sup>9</sup> ≤ nums[i] ≤ 10<sup>9</sup></code></li><li><code>-10<sup>9</sup> ≤ target ≤ 10<sup>9</sup></code></li><li><strong>Only one valid answer exists.</strong></li></ul><p><strong>Follow-up:</strong> Can you come up with an algorithm that is less than <code>O(n²)</code> time complexity?</p>",
          "difficulty": "Easy",
          "likes": 5000,
          "dislikes": 300,
          "hints": ["Use a hash table to store indices"],
          "sampleTestCase": "[2,7,11,15]\n9"
        }'

